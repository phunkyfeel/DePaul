Terminals which are not used

   ERROR


State 1 conflicts: 3 shift/reduce


Grammar

    0 $accept: expr $end

    1 list: list expr
    2     | /* empty */

    3 expr: BEGIN_P PRINT expr END_P
    4     | BEGIN_P PRINT STRING END_P
    5     | BEGIN_P READ END_P
    6     | BEGIN_P IF expr expr END_P
    7     | BEGIN_P IF expr expr expr END_P
    8     | BEGIN_P WHILE expr expr END_P
    9     | BEGIN_P list END_P
   10     | BEGIN_P expr END_P
   11     | BEGIN_P EQUAL VARIABLE expr END_P
   12     | BEGIN_P LESS expr expr END_P
   13     | BEGIN_P GREATER expr expr END_P
   14     | BEGIN_P PLUS expr expr END_P
   15     | BEGIN_P MINUS expr expr END_P
   16     | BEGIN_P STAR expr expr END_P
   17     | BEGIN_P SLASH expr expr END_P
   18     | BEGIN_P EQUALTO expr expr END_P
   19     | BEGIN_P NOTEQUALTO expr expr END_P
   20     | BEGIN_P INCREMENT VARIABLE END_P
   21     | BEGIN_P DECREMENT VARIABLE END_P
   22     | BEGIN_P PLUSEQUAL VARIABLE NUMBER END_P
   23     | BEGIN_P MINUSEQUAL VARIABLE NUMBER END_P
   24     | BEGIN_P MULTEQUAL VARIABLE NUMBER END_P
   25     | BEGIN_P DIVEQUAL VARIABLE NUMBER END_P
   26     | BEGIN_P PRINTLN expr END_P
   27     | BEGIN_P PRINTLN STRING END_P
   28     | BEGIN_P NOT expr END_P
   29     | BEGIN_P MINUS expr END_P
   30     | BEGIN_P DO list expr END_P
   31     | NUMBER
   32     | VARIABLE


Terminals, with rules where they appear

$end (0) 0
error (256)
BEGIN_P (258) 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22
    23 24 25 26 27 28 29 30
END_P (259) 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23
    24 25 26 27 28 29 30
PRINT (260) 3 4
READ (261) 5
IF (262) 6 7
WHILE (263) 8
DO (264) 30
PRINTLN (265) 26 27
NOTEQUALTO (266) 19
EQUALTO (267) 18
EQUAL (268) 11
DECREMENT (269) 21
INCREMENT (270) 20
GREATER (271) 13
LESS (272) 12
DIVEQUAL (273) 25
MULTEQUAL (274) 24
MINUSEQUAL (275) 23
PLUSEQUAL (276) 22
MINUS (277) 15 29
PLUS (278) 14
SLASH (279) 17
STAR (280) 16
NOT (281) 28
VARIABLE (282) 11 20 21 22 23 24 25 32
NUMBER (283) 22 23 24 25 31
STRING (284) 4 27
ERROR (285)


Nonterminals, with rules where they appear

$accept (31)
    on left: 0
list (32)
    on left: 1 2, on right: 1 9 30
expr (33)
    on left: 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23
    24 25 26 27 28 29 30 31 32, on right: 0 1 3 6 7 8 10 11 12 13 14
    15 16 17 18 19 26 28 29 30


state 0

    0 $accept: . expr $end

    BEGIN_P   shift, and go to state 1
    VARIABLE  shift, and go to state 2
    NUMBER    shift, and go to state 3

    expr  go to state 4


state 1

    3 expr: BEGIN_P . PRINT expr END_P
    4     | BEGIN_P . PRINT STRING END_P
    5     | BEGIN_P . READ END_P
    6     | BEGIN_P . IF expr expr END_P
    7     | BEGIN_P . IF expr expr expr END_P
    8     | BEGIN_P . WHILE expr expr END_P
    9     | BEGIN_P . list END_P
   10     | BEGIN_P . expr END_P
   11     | BEGIN_P . EQUAL VARIABLE expr END_P
   12     | BEGIN_P . LESS expr expr END_P
   13     | BEGIN_P . GREATER expr expr END_P
   14     | BEGIN_P . PLUS expr expr END_P
   15     | BEGIN_P . MINUS expr expr END_P
   16     | BEGIN_P . STAR expr expr END_P
   17     | BEGIN_P . SLASH expr expr END_P
   18     | BEGIN_P . EQUALTO expr expr END_P
   19     | BEGIN_P . NOTEQUALTO expr expr END_P
   20     | BEGIN_P . INCREMENT VARIABLE END_P
   21     | BEGIN_P . DECREMENT VARIABLE END_P
   22     | BEGIN_P . PLUSEQUAL VARIABLE NUMBER END_P
   23     | BEGIN_P . MINUSEQUAL VARIABLE NUMBER END_P
   24     | BEGIN_P . MULTEQUAL VARIABLE NUMBER END_P
   25     | BEGIN_P . DIVEQUAL VARIABLE NUMBER END_P
   26     | BEGIN_P . PRINTLN expr END_P
   27     | BEGIN_P . PRINTLN STRING END_P
   28     | BEGIN_P . NOT expr END_P
   29     | BEGIN_P . MINUS expr END_P
   30     | BEGIN_P . DO list expr END_P

    BEGIN_P     shift, and go to state 1
    PRINT       shift, and go to state 5
    READ        shift, and go to state 6
    IF          shift, and go to state 7
    WHILE       shift, and go to state 8
    DO          shift, and go to state 9
    PRINTLN     shift, and go to state 10
    NOTEQUALTO  shift, and go to state 11
    EQUALTO     shift, and go to state 12
    EQUAL       shift, and go to state 13
    DECREMENT   shift, and go to state 14
    INCREMENT   shift, and go to state 15
    GREATER     shift, and go to state 16
    LESS        shift, and go to state 17
    DIVEQUAL    shift, and go to state 18
    MULTEQUAL   shift, and go to state 19
    MINUSEQUAL  shift, and go to state 20
    PLUSEQUAL   shift, and go to state 21
    MINUS       shift, and go to state 22
    PLUS        shift, and go to state 23
    SLASH       shift, and go to state 24
    STAR        shift, and go to state 25
    NOT         shift, and go to state 26
    VARIABLE    shift, and go to state 2
    NUMBER      shift, and go to state 3

    BEGIN_P   [reduce using rule 2 (list)]
    VARIABLE  [reduce using rule 2 (list)]
    NUMBER    [reduce using rule 2 (list)]
    $default  reduce using rule 2 (list)

    list  go to state 27
    expr  go to state 28


state 2

   32 expr: VARIABLE .

    $default  reduce using rule 32 (expr)


state 3

   31 expr: NUMBER .

    $default  reduce using rule 31 (expr)


state 4

    0 $accept: expr . $end

    $end  shift, and go to state 29


state 5

    3 expr: BEGIN_P PRINT . expr END_P
    4     | BEGIN_P PRINT . STRING END_P

    BEGIN_P   shift, and go to state 1
    VARIABLE  shift, and go to state 2
    NUMBER    shift, and go to state 3
    STRING    shift, and go to state 30

    expr  go to state 31


state 6

    5 expr: BEGIN_P READ . END_P

    END_P  shift, and go to state 32


state 7

    6 expr: BEGIN_P IF . expr expr END_P
    7     | BEGIN_P IF . expr expr expr END_P

    BEGIN_P   shift, and go to state 1
    VARIABLE  shift, and go to state 2
    NUMBER    shift, and go to state 3

    expr  go to state 33


state 8

    8 expr: BEGIN_P WHILE . expr expr END_P

    BEGIN_P   shift, and go to state 1
    VARIABLE  shift, and go to state 2
    NUMBER    shift, and go to state 3

    expr  go to state 34


state 9

   30 expr: BEGIN_P DO . list expr END_P

    $default  reduce using rule 2 (list)

    list  go to state 35


state 10

   26 expr: BEGIN_P PRINTLN . expr END_P
   27     | BEGIN_P PRINTLN . STRING END_P

    BEGIN_P   shift, and go to state 1
    VARIABLE  shift, and go to state 2
    NUMBER    shift, and go to state 3
    STRING    shift, and go to state 36

    expr  go to state 37


state 11

   19 expr: BEGIN_P NOTEQUALTO . expr expr END_P

    BEGIN_P   shift, and go to state 1
    VARIABLE  shift, and go to state 2
    NUMBER    shift, and go to state 3

    expr  go to state 38


state 12

   18 expr: BEGIN_P EQUALTO . expr expr END_P

    BEGIN_P   shift, and go to state 1
    VARIABLE  shift, and go to state 2
    NUMBER    shift, and go to state 3

    expr  go to state 39


state 13

   11 expr: BEGIN_P EQUAL . VARIABLE expr END_P

    VARIABLE  shift, and go to state 40


state 14

   21 expr: BEGIN_P DECREMENT . VARIABLE END_P

    VARIABLE  shift, and go to state 41


state 15

   20 expr: BEGIN_P INCREMENT . VARIABLE END_P

    VARIABLE  shift, and go to state 42


state 16

   13 expr: BEGIN_P GREATER . expr expr END_P

    BEGIN_P   shift, and go to state 1
    VARIABLE  shift, and go to state 2
    NUMBER    shift, and go to state 3

    expr  go to state 43


state 17

   12 expr: BEGIN_P LESS . expr expr END_P

    BEGIN_P   shift, and go to state 1
    VARIABLE  shift, and go to state 2
    NUMBER    shift, and go to state 3

    expr  go to state 44


state 18

   25 expr: BEGIN_P DIVEQUAL . VARIABLE NUMBER END_P

    VARIABLE  shift, and go to state 45


state 19

   24 expr: BEGIN_P MULTEQUAL . VARIABLE NUMBER END_P

    VARIABLE  shift, and go to state 46


state 20

   23 expr: BEGIN_P MINUSEQUAL . VARIABLE NUMBER END_P

    VARIABLE  shift, and go to state 47


state 21

   22 expr: BEGIN_P PLUSEQUAL . VARIABLE NUMBER END_P

    VARIABLE  shift, and go to state 48


state 22

   15 expr: BEGIN_P MINUS . expr expr END_P
   29     | BEGIN_P MINUS . expr END_P

    BEGIN_P   shift, and go to state 1
    VARIABLE  shift, and go to state 2
    NUMBER    shift, and go to state 3

    expr  go to state 49


state 23

   14 expr: BEGIN_P PLUS . expr expr END_P

    BEGIN_P   shift, and go to state 1
    VARIABLE  shift, and go to state 2
    NUMBER    shift, and go to state 3

    expr  go to state 50


state 24

   17 expr: BEGIN_P SLASH . expr expr END_P

    BEGIN_P   shift, and go to state 1
    VARIABLE  shift, and go to state 2
    NUMBER    shift, and go to state 3

    expr  go to state 51


state 25

   16 expr: BEGIN_P STAR . expr expr END_P

    BEGIN_P   shift, and go to state 1
    VARIABLE  shift, and go to state 2
    NUMBER    shift, and go to state 3

    expr  go to state 52


state 26

   28 expr: BEGIN_P NOT . expr END_P

    BEGIN_P   shift, and go to state 1
    VARIABLE  shift, and go to state 2
    NUMBER    shift, and go to state 3

    expr  go to state 53


state 27

    1 list: list . expr
    9 expr: BEGIN_P list . END_P

    BEGIN_P   shift, and go to state 1
    END_P     shift, and go to state 54
    VARIABLE  shift, and go to state 2
    NUMBER    shift, and go to state 3

    expr  go to state 55


state 28

   10 expr: BEGIN_P expr . END_P

    END_P  shift, and go to state 56


state 29

    0 $accept: expr $end .

    $default  accept


state 30

    4 expr: BEGIN_P PRINT STRING . END_P

    END_P  shift, and go to state 57


state 31

    3 expr: BEGIN_P PRINT expr . END_P

    END_P  shift, and go to state 58


state 32

    5 expr: BEGIN_P READ END_P .

    $default  reduce using rule 5 (expr)


state 33

    6 expr: BEGIN_P IF expr . expr END_P
    7     | BEGIN_P IF expr . expr expr END_P

    BEGIN_P   shift, and go to state 1
    VARIABLE  shift, and go to state 2
    NUMBER    shift, and go to state 3

    expr  go to state 59


state 34

    8 expr: BEGIN_P WHILE expr . expr END_P

    BEGIN_P   shift, and go to state 1
    VARIABLE  shift, and go to state 2
    NUMBER    shift, and go to state 3

    expr  go to state 60


state 35

    1 list: list . expr
   30 expr: BEGIN_P DO list . expr END_P

    BEGIN_P   shift, and go to state 1
    VARIABLE  shift, and go to state 2
    NUMBER    shift, and go to state 3

    expr  go to state 61


state 36

   27 expr: BEGIN_P PRINTLN STRING . END_P

    END_P  shift, and go to state 62


state 37

   26 expr: BEGIN_P PRINTLN expr . END_P

    END_P  shift, and go to state 63


state 38

   19 expr: BEGIN_P NOTEQUALTO expr . expr END_P

    BEGIN_P   shift, and go to state 1
    VARIABLE  shift, and go to state 2
    NUMBER    shift, and go to state 3

    expr  go to state 64


state 39

   18 expr: BEGIN_P EQUALTO expr . expr END_P

    BEGIN_P   shift, and go to state 1
    VARIABLE  shift, and go to state 2
    NUMBER    shift, and go to state 3

    expr  go to state 65


state 40

   11 expr: BEGIN_P EQUAL VARIABLE . expr END_P

    BEGIN_P   shift, and go to state 1
    VARIABLE  shift, and go to state 2
    NUMBER    shift, and go to state 3

    expr  go to state 66


state 41

   21 expr: BEGIN_P DECREMENT VARIABLE . END_P

    END_P  shift, and go to state 67


state 42

   20 expr: BEGIN_P INCREMENT VARIABLE . END_P

    END_P  shift, and go to state 68


state 43

   13 expr: BEGIN_P GREATER expr . expr END_P

    BEGIN_P   shift, and go to state 1
    VARIABLE  shift, and go to state 2
    NUMBER    shift, and go to state 3

    expr  go to state 69


state 44

   12 expr: BEGIN_P LESS expr . expr END_P

    BEGIN_P   shift, and go to state 1
    VARIABLE  shift, and go to state 2
    NUMBER    shift, and go to state 3

    expr  go to state 70


state 45

   25 expr: BEGIN_P DIVEQUAL VARIABLE . NUMBER END_P

    NUMBER  shift, and go to state 71


state 46

   24 expr: BEGIN_P MULTEQUAL VARIABLE . NUMBER END_P

    NUMBER  shift, and go to state 72


state 47

   23 expr: BEGIN_P MINUSEQUAL VARIABLE . NUMBER END_P

    NUMBER  shift, and go to state 73


state 48

   22 expr: BEGIN_P PLUSEQUAL VARIABLE . NUMBER END_P

    NUMBER  shift, and go to state 74


state 49

   15 expr: BEGIN_P MINUS expr . expr END_P
   29     | BEGIN_P MINUS expr . END_P

    BEGIN_P   shift, and go to state 1
    END_P     shift, and go to state 75
    VARIABLE  shift, and go to state 2
    NUMBER    shift, and go to state 3

    expr  go to state 76


state 50

   14 expr: BEGIN_P PLUS expr . expr END_P

    BEGIN_P   shift, and go to state 1
    VARIABLE  shift, and go to state 2
    NUMBER    shift, and go to state 3

    expr  go to state 77


state 51

   17 expr: BEGIN_P SLASH expr . expr END_P

    BEGIN_P   shift, and go to state 1
    VARIABLE  shift, and go to state 2
    NUMBER    shift, and go to state 3

    expr  go to state 78


state 52

   16 expr: BEGIN_P STAR expr . expr END_P

    BEGIN_P   shift, and go to state 1
    VARIABLE  shift, and go to state 2
    NUMBER    shift, and go to state 3

    expr  go to state 79


state 53

   28 expr: BEGIN_P NOT expr . END_P

    END_P  shift, and go to state 80


state 54

    9 expr: BEGIN_P list END_P .

    $default  reduce using rule 9 (expr)


state 55

    1 list: list expr .

    $default  reduce using rule 1 (list)


state 56

   10 expr: BEGIN_P expr END_P .

    $default  reduce using rule 10 (expr)


state 57

    4 expr: BEGIN_P PRINT STRING END_P .

    $default  reduce using rule 4 (expr)


state 58

    3 expr: BEGIN_P PRINT expr END_P .

    $default  reduce using rule 3 (expr)


state 59

    6 expr: BEGIN_P IF expr expr . END_P
    7     | BEGIN_P IF expr expr . expr END_P

    BEGIN_P   shift, and go to state 1
    END_P     shift, and go to state 81
    VARIABLE  shift, and go to state 2
    NUMBER    shift, and go to state 3

    expr  go to state 82


state 60

    8 expr: BEGIN_P WHILE expr expr . END_P

    END_P  shift, and go to state 83


state 61

    1 list: list expr .
   30 expr: BEGIN_P DO list expr . END_P

    END_P  shift, and go to state 84

    $default  reduce using rule 1 (list)


state 62

   27 expr: BEGIN_P PRINTLN STRING END_P .

    $default  reduce using rule 27 (expr)


state 63

   26 expr: BEGIN_P PRINTLN expr END_P .

    $default  reduce using rule 26 (expr)


state 64

   19 expr: BEGIN_P NOTEQUALTO expr expr . END_P

    END_P  shift, and go to state 85


state 65

   18 expr: BEGIN_P EQUALTO expr expr . END_P

    END_P  shift, and go to state 86


state 66

   11 expr: BEGIN_P EQUAL VARIABLE expr . END_P

    END_P  shift, and go to state 87


state 67

   21 expr: BEGIN_P DECREMENT VARIABLE END_P .

    $default  reduce using rule 21 (expr)


state 68

   20 expr: BEGIN_P INCREMENT VARIABLE END_P .

    $default  reduce using rule 20 (expr)


state 69

   13 expr: BEGIN_P GREATER expr expr . END_P

    END_P  shift, and go to state 88


state 70

   12 expr: BEGIN_P LESS expr expr . END_P

    END_P  shift, and go to state 89


state 71

   25 expr: BEGIN_P DIVEQUAL VARIABLE NUMBER . END_P

    END_P  shift, and go to state 90


state 72

   24 expr: BEGIN_P MULTEQUAL VARIABLE NUMBER . END_P

    END_P  shift, and go to state 91


state 73

   23 expr: BEGIN_P MINUSEQUAL VARIABLE NUMBER . END_P

    END_P  shift, and go to state 92


state 74

   22 expr: BEGIN_P PLUSEQUAL VARIABLE NUMBER . END_P

    END_P  shift, and go to state 93


state 75

   29 expr: BEGIN_P MINUS expr END_P .

    $default  reduce using rule 29 (expr)


state 76

   15 expr: BEGIN_P MINUS expr expr . END_P

    END_P  shift, and go to state 94


state 77

   14 expr: BEGIN_P PLUS expr expr . END_P

    END_P  shift, and go to state 95


state 78

   17 expr: BEGIN_P SLASH expr expr . END_P

    END_P  shift, and go to state 96


state 79

   16 expr: BEGIN_P STAR expr expr . END_P

    END_P  shift, and go to state 97


state 80

   28 expr: BEGIN_P NOT expr END_P .

    $default  reduce using rule 28 (expr)


state 81

    6 expr: BEGIN_P IF expr expr END_P .

    $default  reduce using rule 6 (expr)


state 82

    7 expr: BEGIN_P IF expr expr expr . END_P

    END_P  shift, and go to state 98


state 83

    8 expr: BEGIN_P WHILE expr expr END_P .

    $default  reduce using rule 8 (expr)


state 84

   30 expr: BEGIN_P DO list expr END_P .

    $default  reduce using rule 30 (expr)


state 85

   19 expr: BEGIN_P NOTEQUALTO expr expr END_P .

    $default  reduce using rule 19 (expr)


state 86

   18 expr: BEGIN_P EQUALTO expr expr END_P .

    $default  reduce using rule 18 (expr)


state 87

   11 expr: BEGIN_P EQUAL VARIABLE expr END_P .

    $default  reduce using rule 11 (expr)


state 88

   13 expr: BEGIN_P GREATER expr expr END_P .

    $default  reduce using rule 13 (expr)


state 89

   12 expr: BEGIN_P LESS expr expr END_P .

    $default  reduce using rule 12 (expr)


state 90

   25 expr: BEGIN_P DIVEQUAL VARIABLE NUMBER END_P .

    $default  reduce using rule 25 (expr)


state 91

   24 expr: BEGIN_P MULTEQUAL VARIABLE NUMBER END_P .

    $default  reduce using rule 24 (expr)


state 92

   23 expr: BEGIN_P MINUSEQUAL VARIABLE NUMBER END_P .

    $default  reduce using rule 23 (expr)


state 93

   22 expr: BEGIN_P PLUSEQUAL VARIABLE NUMBER END_P .

    $default  reduce using rule 22 (expr)


state 94

   15 expr: BEGIN_P MINUS expr expr END_P .

    $default  reduce using rule 15 (expr)


state 95

   14 expr: BEGIN_P PLUS expr expr END_P .

    $default  reduce using rule 14 (expr)


state 96

   17 expr: BEGIN_P SLASH expr expr END_P .

    $default  reduce using rule 17 (expr)


state 97

   16 expr: BEGIN_P STAR expr expr END_P .

    $default  reduce using rule 16 (expr)


state 98

    7 expr: BEGIN_P IF expr expr expr END_P .

    $default  reduce using rule 7 (expr)
